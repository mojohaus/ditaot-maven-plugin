 ------
 Usage
 ------
 Dan T. Tran
 <dantran@gmail.com>
 ------
 October 31, 2009
 ------

Usage

  The following contains a list of requirements in order to use this plugin.
  
  * A full version of DITA Open Toolkit 1.4.3+  must be installed on your
    build host.  You can pass the installation path to plugin configuration directly 
    or through environment variable <DITA_OT>.

* DITA to PDF or xhtml

  The following shows a example on how to transform your DITA source to a PDF format
  
  Replace <transtype> for xhtml for xhtml format
  
---------------------------
<project>
  [...] 
  <packaging>jar</packaging>
  [...]
  <build>
    [...]
    <plugins>
      [...]
      <plugin>
        <groupId>org.codehaus.mojo</groupId>
        <artifactId>dita-maven-plugin</artifactId>
        <version>1.0-alpha-1-SNAPSHOT</version>
        <executions>
          <execution>
            <id>dita2chm</dita>
            <phase>generate-sources</phase>
            <goals>
              <goal>run</goal>
            </goals>
            <configuration>
              <antProperties>
                <output.dir>${project.build.directory}/dita/pdf</output.dir>
                <args.input>${env.DITA_OT}/doc/DITA-readme.ditamap</arg.input>
                <transtype>pdf</transtype>
              </antProperties>
            </configuration>
          </execution>
          [...]
        </executions>
      </plugin>
      [...]
    </plugins>
    [...]
  </build>
  [...]
</project>
---------------------------
  
* DITA to CHM to HTML

  The following shows an example on how to transform your DITA source to a web format, by having
  DITA Open Toolkit to transform your dita files to Microsoft CHM file, then use <chm2web> goal to convert
  CHM file to HTML files, a finally compress them into a jar file to be deployed by build-helper-maven-plugin
  
  Additional external tools are required for this example:
  
  * Microsoft's HTML Help Workshop on your execution path to generate Microsoft help
    format ( transtype=htmlhelp ),or CHM type file.
    
  * chm2web utility 
  
  Full working example is at {{{https://svn.codehaus.org/mojo/trunk/sandbox/dita-maven-plugin/src/it/dita-relnotes}
  https://svn.codehaus.org/mojo/trunk/sandbox/dita-maven-plugin/src/it/dita-relnotes}}
   
---------------------------
<project>
  [...] 
  <packaging>jar</packaging>
  [...]
  <build>
    [...]
    <plugins>
      [...]
      <plugin>
        <groupId>org.codehaus.mojo</groupId>
        <artifactId>dita-maven-plugin</artifactId>
        <version>1.0-alpha-1-SNAPSHOT</version>
        <executions>
          <execution>
            <id>dita2chm</dita>
            <phase>generate-sources</phase>
            <goals>
              <goal>run</goal>
            </goals>
            <configuration>
              <antProperties>
                <output.dir>${project.build.directory}/dita/htmlhelp</output.dir>
                <args.input>${env.DITA_OT}/doc/DITA-readme.ditamap</args.input>
                <transtype>htmlhelp</transtype>
              </antProperties>
            </configuration>
          </execution>
          
          <execution>
            <id>chm2web</dita>
            <phase>complile</phase>
            <goals>
              <goal>chm2web</goal>
            </goals>
            <configuration>
              <chm2webExe>path/to/your/chm2web.exe</chm2webExe>
              <descriptor>path/to/your/chm2web profile file</descriptor>
              <!-- 
                 please refer to chm2web on configure your chm2web's project file to
                 1. Pickup input file as ${project.build.directory}/dita/out/DITA-readme.chm
                 2. Output directory is set to ${project.build.directory}/classes 
                    maven-jar-plugin can package them out at the implicit package phase
               -->
            </configuration>
          </execution>
          [...]
        </executions>
      </plugin>
      [...]
    </plugins>
    [...]
  </build>
  [...]
</project>
---------------------------
